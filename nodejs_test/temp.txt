

Express server listening on port 81
open the login page
[90mGET / [32m200 [90m40ms - 4.48kb[0m
[90mGET /dist/css/bootstrap.css [33m404 [90m7ms[0m
[90mGET /dist/css/bootstrap-theme.css [33m404 [90m10ms[0m
[90mGET /js/bootstrap.file-input.js [33m404 [90m9ms[0m
[90mGET /css/bootstrap.file-input.css [33m404 [90m9ms[0m
[90mGET /dist/css/bootstrap-responsive.css [33m404 [90m13ms[0m
[90mGET /stylesheets/bootstrap.min.css [32m200 [90m18ms - 95.06kb[0m
open the login page
[90mGET / [36m304 [90m14ms[0m
[90mGET /dist/css/bootstrap.css [33m404 [90m5ms[0m
[90mGET /stylesheets/bootstrap.min.css [36m304 [90m9ms[0m
[90mGET /dist/css/bootstrap-theme.css [33m404 [90m13ms[0m
[90mGET /css/bootstrap.file-input.css [33m404 [90m14ms[0m
[90mGET /js/bootstrap.file-input.js [33m404 [90m14ms[0m
[90mGET /dist/css/bootstrap-responsive.css [33m404 [90m14ms[0m
[90mGET /css/bootstrap.file-input.css [33m404 [90m2ms[0m
[90mGET /dist/css/bootstrap-responsive.css [33m404 [90m2ms[0m
hello
{ username: 'admin', password: 'admin' }
world
[90mPOST /dologin [36m302 [90m14ms - 70b[0m
check the username info 
admin
admin
[]
object
{ host: '64v1.mzhen.cn',
  ip: '192.168.7.101',
  cpu: '2',
  ram: '2G',
  disk: '44G',
  os: 'CentOS 6.4',
  load_info: '0.02',
  status: 'live',
  role_name: '' }
[]
object
{ host: '64v3.mzhen.cn',
  ip: '119.90.0.163',
  cpu: '2',
  ram: '2G',
  disk: '44G',
  os: 'CentOS 6.4',
  load_info: '0.00',
  status: 'live',
  role_name: '' }
[]
object
{ host: '64v2.mzhen.cn',
  ip: '119.90.0.162',
  cpu: '2',
  ram: '2G',
  disk: '44G',
  os: 'CentOS 6.4',
  load_info: '0.00',
  status: 'live',
  role_name: '' }
[]
object
{ host: '64v4.mzhen.cn',
  ip: '119.90.0.164',
  cpu: '2',
  ram: '2G',
  disk: '44G',
  os: 'CentOS 6.4',
  load_info: '0.08',
  status: 'live',
  role_name: '' }
[]
object
{ host: '64v5.mzhen.cn',
  ip: '119.90.0.165',
  cpu: '2',
  ram: '2G',
  disk: '44G',
  os: 'CentOS 6.4',
  load_info: '0.08',
  status: 'live',
  role_name: '' }
[]
object
{ host: '64v6.mzhen.cn',
  ip: '119.90.0.166',
  cpu: '2',
  ram: '2G',
  disk: '44G',
  os: 'CentOS 6.4',
  load_info: '0.08',
  status: 'live',
  role_name: '' }
[90mGET /server [32m200 [90m57ms - 19.65kb[0m
[90mGET /stylesheets/bootstrap.min.css [36m304 [90m6ms[0m
[90mGET /dist/css/bootstrap.css [33m404 [90m10ms[0m
[90mGET /dist/css/bootstrap-theme.css [33m404 [90m13ms[0m
[90mGET /js/bootstrap.file-input.js [33m404 [90m12ms[0m
[90mGET /css/bootstrap.file-input.css [33m404 [90m12ms[0m
[90mGET /dist/css/bootstrap-responsive.css [33m404 [90m13ms[0m
[90mGET /javascripts/bootstrap.min.js [36m304 [90m5ms[0m
[90mGET /javascripts/bootstrap3-validation.js [36m304 [90m4ms[0m
[90mGET /javascripts/json-to-table.js [36m304 [90m2ms[0m
[90mGET /css/bootstrap.file-input.css [33m404 [90m2ms[0m
[90mGET /dist/css/bootstrap-responsive.css [33m404 [90m1ms[0m
check the username info 
admin
[]
object
{ host: '64v1.mzhen.cn',
  ip: '192.168.7.101',
  cpu: '2',
  ram: '2G',
  disk: '44G',
  os: 'CentOS 6.4',
  load_info: '0.02',
  status: 'live',
  role_name: '' }
[]
object
{ host: '64v3.mzhen.cn',
  ip: '119.90.0.163',
  cpu: '2',
  ram: '2G',
  disk: '44G',
  os: 'CentOS 6.4',
  load_info: '0.00',
  status: 'live',
  role_name: '' }
[]
object
{ host: '64v2.mzhen.cn',
  ip: '119.90.0.162',
  cpu: '2',
  ram: '2G',
  disk: '44G',
  os: 'CentOS 6.4',
  load_info: '0.00',
  status: 'live',
  role_name: '' }
[]
object
{ host: '64v4.mzhen.cn',
  ip: '119.90.0.164',
  cpu: '2',
  ram: '2G',
  disk: '44G',
  os: 'CentOS 6.4',
  load_info: '0.08',
  status: 'live',
  role_name: '' }
[]
object
{ host: '64v5.mzhen.cn',
  ip: '119.90.0.165',
  cpu: '2',
  ram: '2G',
  disk: '44G',
  os: 'CentOS 6.4',
  load_info: '0.08',
  status: 'live',
  role_name: '' }
[]
object
{ host: '64v6.mzhen.cn',
  ip: '119.90.0.166',
  cpu: '2',
  ram: '2G',
  disk: '44G',
  os: 'CentOS 6.4',
  load_info: '0.08',
  status: 'live',
  role_name: '' }
[90mGET /server/update [32m200 [90m17ms - 1.09kb[0m
check the username info 
admin
the request is [object Object]
[90mGET /service [36m304 [90m57ms[0m
[90mGET /stylesheets/bootstrap.min.css [36m304 [90m6ms[0m
[90mGET /dist/css/bootstrap.css [33m404 [90m12ms[0m
[90mGET /dist/css/bootstrap-theme.css [33m404 [90m11ms[0m
[90mGET /js/bootstrap.file-input.js [33m404 [90m13ms[0m
[90mGET /css/bootstrap.file-input.css [33m404 [90m13ms[0m
[90mGET /dist/css/bootstrap-responsive.css [33m404 [90m14ms[0m
[90mGET /javascripts/bootstrap.min.js [36m304 [90m3ms[0m
[90mGET /javascripts/bootstrap3-validation.js [36m304 [90m4ms[0m
[90mGET /javascripts/json-to-table.js [36m304 [90m3ms[0m
[90mGET /20100108135852447.jpg [33m404 [90m7ms[0m
[90mGET /css/bootstrap.file-input.css [33m404 [90m3ms[0m
[90mGET /dist/css/bootstrap-responsive.css [33m404 [90m2ms[0m
[90mGET /20100108135852447.jpg [33m404 [90m3ms[0m
check the username info 
admin
the serviceChoice radio is hdfs
the user is admin
[ { host: '64v1.mzhen.cn' },
  { host: '64v2.mzhen.cn' },
  { host: '64v3.mzhen.cn' },
  { host: '64v4.mzhen.cn' },
  { host: '64v5.mzhen.cn' },
  { host: '64v6.mzhen.cn' } ]
[{"host":"64v1.mzhen.cn"},{"host":"64v2.mzhen.cn"},{"host":"64v3.mzhen.cn"},{"host":"64v4.mzhen.cn"},{"host":"64v5.mzhen.cn"},{"host":"64v6.mzhen.cn"}]
admin
[90mPOST /service/select_service [32m200 [90m86ms - 61.15kb[0m
[90mGET /stylesheets/bootstrap.min.css [36m304 [90m25ms[0m
[90mGET /dist/css/bootstrap.css [33m404 [90m34ms[0m
[90mGET /dist/css/bootstrap-theme.css [33m404 [90m34ms[0m
[90mGET /js/bootstrap.file-input.js [33m404 [90m35ms[0m
[90mGET /css/bootstrap.file-input.css [33m404 [90m36ms[0m
[90mGET /dist/css/bootstrap-responsive.css [33m404 [90m36ms[0m
[90mGET /javascripts/bootstrap.min.js [36m304 [90m3ms[0m
[90mGET /javascripts/bootstrap3-validation.js [36m304 [90m3ms[0m
[90mGET /javascripts/json-to-table.js [36m304 [90m4ms[0m
[90mGET /service/20100108135852447.jpg [33m404 [90m7ms[0m
[90mGET /css/bootstrap.file-input.css [33m404 [90m1ms[0m
[90mGET /dist/css/bootstrap-responsive.css [33m404 [90m3ms[0m
[90mGET /service/20100108135852447.jpg [33m404 [90m2ms[0m
check the username info 
admin
enter selectHostsForService
the service is hdfs
the user is admin
{ _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: true,
     reading: false,
     calledRead: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: 
   { data: [Function: onData],
     readable: [Function],
     error: [ [Object], [Object] ],
     close: { [Function: g] listener: [Function: cleanup] } },
  _maxListeners: 10,
  socket: 
   { _connecting: false,
     _handle: 
      { fd: 21,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [] },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     errorEmitted: false,
     bytesRead: 13071,
     _bytesDispatched: 93188,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 12,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:81' },
     _idleTimeout: 120000,
     _idleNext: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        errorEmitted: false,
        bytesRead: 4297,
        _bytesDispatched: 2913,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1385630881118,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
     _idleStart: 1385630887511,
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: [Function: locals] },
     _peername: { address: '59.108.43.2', family: 'IPv4', port: 43345 } },
  connection: 
   { _connecting: false,
     _handle: 
      { fd: 21,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [] },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     errorEmitted: false,
     bytesRead: 13071,
     _bytesDispatched: 93188,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 12,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:81' },
     _idleTimeout: 120000,
     _idleNext: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        errorEmitted: false,
        bytesRead: 4297,
        _bytesDispatched: 2913,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1385630881118,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
     _idleStart: 1385630887511,
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: [Function: locals] },
     _peername: { address: '59.108.43.2', family: 'IPv4', port: 43345 } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: '119.90.0.161:81',
     'user-agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:20.0) Gecko/20100101 Firefox/20.0',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-language': 'zh-cn,zh;q=0.8,en-us;q=0.5,en;q=0.3',
     'accept-encoding': 'gzip, deflate',
     referer: 'http://119.90.0.161:81/service/select_service',
     cookie: 'connect.sess=s%3Aj%3A%7B%22username%22%3A%22admin%22%2C%22machine_host%22%3A%2264v6.mzhen.cn%22%2C%22machine_port%22%3A%2222%22%2C%22Service%22%3A%22hdfs%22%2C%22service%22%3A%22hdfs%22%7D.k%2FX1VIZoK%2FUgLu4LeMT%2BBqGFslXQuxL74smORh9YAGM',
     connection: 'keep-alive',
     'content-type': 'application/x-www-form-urlencoded',
     'content-length': '149' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/service/select_hosts_for_service',
  method: 'POST',
  statusCode: null,
  client: 
   { _connecting: false,
     _handle: 
      { fd: 21,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [] },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     errorEmitted: false,
     bytesRead: 13071,
     _bytesDispatched: 93188,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 12,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:81' },
     _idleTimeout: 120000,
     _idleNext: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        errorEmitted: false,
        bytesRead: 4297,
        _bytesDispatched: 2913,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1385630881118,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
     _idleStart: 1385630887511,
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: [Function: locals] },
     _peername: { address: '59.108.43.2', family: 'IPv4', port: 43345 } },
  _consuming: true,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/service/select_hosts_for_service',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/service/select_hosts_for_service',
     path: '/service/select_hosts_for_service',
     href: '/service/select_hosts_for_service' },
  query: {},
  res: 
   { domain: null,
     _events: 
      { finish: [Object],
        close: [Function: logRequest],
        header: [Function] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        errorEmitted: false,
        bytesRead: 13071,
        _bytesDispatched: 93188,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1385630887511,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        errorEmitted: false,
        bytesRead: 13071,
        _bytesDispatched: 93188,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1385630887511,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: [Function: locals] },
  next: [Function: next],
  _startTime: Thu Nov 28 2013 17:28:07 GMT+0800 (CST),
  _remoteAddress: '59.108.43.2',
  body: 
   { hostslist_datanode: 'datanode,64v1.mzhen.cn',
     hostslist_namenode: 'namenode,64v2.mzhen.cn',
     hostslist_secondarynamenode: 'secondarynamenode,64v6.mzhen.cn' },
  _body: true,
  pipe: [Function],
  addListener: [Function],
  on: [Function],
  pause: [Function],
  resume: [Function],
  read: [Function],
  originalMethod: 'POST',
  secret: 'sctalk admin manager',
  cookies: {},
  signedCookies: 
   { 'connect.sess': 
      { username: 'admin',
        machine_host: '64v6.mzhen.cn',
        machine_port: '22',
        Service: 'hdfs',
        service: 'hdfs',
        cookie: [Object] } },
  session: 
   { username: 'admin',
     machine_host: '64v6.mzhen.cn',
     machine_port: '22',
     Service: 'hdfs',
     service: 'hdfs',
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  _route_index: 3,
  route: 
   { path: '/service/select_hosts_for_service',
     method: 'post',
     callbacks: [ [Function], [Function] ],
     keys: [],
     regexp: /^\/service\/select_hosts_for_service\/?$/i,
     params: [] },
  params: [] }
[90mGET /dist/css/bootstrap.css [33m404 [90m3ms[0m
[90mGET /dist/css/bootstrap-theme.css [33m404 [90m2ms[0m
[90mGET /css/bootstrap.file-input.css [33m404 [90m2ms[0m
open the login page
[90mGET / [36m304 [90m12ms[0m
[90mGET /dist/css/bootstrap-responsive.css [33m404 [90m2ms[0m
[90mGET /stylesheets/bootstrap.min.css [36m304 [90m1ms[0m
[90mGET /js/bootstrap.file-input.js [33m404 [90m3ms[0m
[90mPOST /service/select_hosts_for_service [32m200 [90m120006ms[0m
check the username info 
admin
enter selectHostsForService
the service is hdfs
the user is admin
{ _readableState: 
   { highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: false,
     ended: true,
     endEmitted: true,
     reading: false,
     calledRead: true,
     sync: false,
     needReadable: true,
     emittedReadable: false,
     readableListening: false,
     objectMode: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: 
   { data: [Function: onData],
     readable: [Function],
     error: [ [Object], [Object] ],
     close: { [Function: g] listener: [Function: cleanup] } },
  _maxListeners: 10,
  socket: 
   { _connecting: false,
     _handle: 
      { fd: 11,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [] },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     errorEmitted: false,
     bytesRead: 870,
     _bytesDispatched: 0,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 2,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:81' },
     _idleTimeout: 120000,
     _idleNext: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        errorEmitted: false,
        bytesRead: 3865,
        _bytesDispatched: 99709,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1385630970754,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
     _idleStart: 1385631007525,
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: [Function: locals] },
     _peername: { address: '59.108.43.2', family: 'IPv4', port: 43374 } },
  connection: 
   { _connecting: false,
     _handle: 
      { fd: 11,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [] },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     errorEmitted: false,
     bytesRead: 870,
     _bytesDispatched: 0,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 2,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:81' },
     _idleTimeout: 120000,
     _idleNext: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        errorEmitted: false,
        bytesRead: 3865,
        _bytesDispatched: 99709,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1385630970754,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
     _idleStart: 1385631007525,
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: [Function: locals] },
     _peername: { address: '59.108.43.2', family: 'IPv4', port: 43374 } },
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: '119.90.0.161:81',
     'user-agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:20.0) Gecko/20100101 Firefox/20.0',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'accept-language': 'zh-cn,zh;q=0.8,en-us;q=0.5,en;q=0.3',
     'accept-encoding': 'gzip, deflate',
     referer: 'http://119.90.0.161:81/service/select_service',
     cookie: 'connect.sess=s%3Aj%3A%7B%22username%22%3A%22admin%22%2C%22machine_host%22%3A%2264v6.mzhen.cn%22%2C%22machine_port%22%3A%2222%22%2C%22Service%22%3A%22hdfs%22%2C%22service%22%3A%22hdfs%22%7D.k%2FX1VIZoK%2FUgLu4LeMT%2BBqGFslXQuxL74smORh9YAGM',
     connection: 'keep-alive',
     'content-type': 'application/x-www-form-urlencoded',
     'content-length': '149' },
  trailers: {},
  _pendings: [],
  _pendingIndex: 0,
  url: '/service/select_hosts_for_service',
  method: 'POST',
  statusCode: null,
  client: 
   { _connecting: false,
     _handle: 
      { fd: 11,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Function],
        close: [Object] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [] },
     writable: true,
     allowHalfOpen: true,
     onend: [Function],
     destroyed: false,
     errorEmitted: false,
     bytesRead: 870,
     _bytesDispatched: 0,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 2,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:81' },
     _idleTimeout: 120000,
     _idleNext: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        errorEmitted: false,
        bytesRead: 3865,
        _bytesDispatched: 99709,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1385630970754,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: { _idleNext: [Circular], _idlePrev: [Object] },
     _idleStart: 1385631007525,
     parser: 
      { _headers: [],
        _url: '',
        onHeaders: [Function: parserOnHeaders],
        onHeadersComplete: [Function: parserOnHeadersComplete],
        onBody: [Function: parserOnBody],
        onMessageComplete: [Function: parserOnMessageComplete],
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function] },
     ondata: [Function],
     _paused: false,
     _httpMessage: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        output: [],
        outputEncodings: [],
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _headerSent: false,
        _header: '',
        _hasBody: true,
        _trailer: '',
        finished: false,
        _hangupClose: false,
        socket: [Circular],
        connection: [Circular],
        _headers: [Object],
        _headerNames: [Object],
        req: [Circular],
        locals: [Function: locals] },
     _peername: { address: '59.108.43.2', family: 'IPv4', port: 43374 } },
  _consuming: true,
  _dumped: false,
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  upgrade: false,
  originalUrl: '/service/select_hosts_for_service',
  _parsedUrl: 
   { protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/service/select_hosts_for_service',
     path: '/service/select_hosts_for_service',
     href: '/service/select_hosts_for_service' },
  query: {},
  res: 
   { domain: null,
     _events: 
      { finish: [Object],
        close: [Function: logRequest],
        header: [Function] },
     _maxListeners: 10,
     output: [],
     outputEncodings: [],
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _headerSent: false,
     _header: '',
     _hasBody: true,
     _trailer: '',
     finished: false,
     _hangupClose: false,
     socket: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        errorEmitted: false,
        bytesRead: 870,
        _bytesDispatched: 0,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1385631007525,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      { _connecting: false,
        _handle: [Object],
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _maxListeners: 10,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        onend: [Function],
        destroyed: false,
        errorEmitted: false,
        bytesRead: 870,
        _bytesDispatched: 0,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1385631007525,
        parser: [Object],
        ondata: [Function],
        _paused: false,
        _httpMessage: [Circular],
        _peername: [Object] },
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     req: [Circular],
     locals: [Function: locals] },
  next: [Function: next],
  _startTime: Thu Nov 28 2013 17:30:07 GMT+0800 (CST),
  _remoteAddress: '59.108.43.2',
  body: 
   { hostslist_datanode: 'datanode,64v1.mzhen.cn',
     hostslist_namenode: 'namenode,64v2.mzhen.cn',
     hostslist_secondarynamenode: 'secondarynamenode,64v6.mzhen.cn' },
  _body: true,
  pipe: [Function],
  addListener: [Function],
  on: [Function],
  pause: [Function],
  resume: [Function],
  read: [Function],
  originalMethod: 'POST',
  secret: 'sctalk admin manager',
  cookies: {},
  signedCookies: 
   { 'connect.sess': 
      { username: 'admin',
        machine_host: '64v6.mzhen.cn',
        machine_port: '22',
        Service: 'hdfs',
        service: 'hdfs',
        cookie: [Object] } },
  session: 
   { username: 'admin',
     machine_host: '64v6.mzhen.cn',
     machine_port: '22',
     Service: 'hdfs',
     service: 'hdfs',
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  _route_index: 3,
  route: 
   { path: '/service/select_hosts_for_service',
     method: 'post',
     callbacks: [ [Function], [Function] ],
     keys: [],
     regexp: /^\/service\/select_hosts_for_service\/?$/i,
     params: [] },
  params: [] }
[90mPOST /service/select_hosts_for_service [32m200 [90m120003ms[0m
sh HOST -g 64v1.mzhen.cn -p 22 -k /usr/local/NArk/web/keyfile_dir/64v1.mzh success
cpu
ram
disk
os
ip
load
sh HOST -g 64v3.mzhen.cn -p 22 -k /usr/local/NArk/web/keyfile_dir/64v3.mzh success
cpu
ram
disk
os
ip
load
sh HOST -g 64v2.mzhen.cn -p 22 -k /usr/local/NArk/web/keyfile_dir/64v2.mzh success
cpu
ram
disk
os
ip
load
sh HOST -g 64v4.mzhen.cn -p 22 -k /usr/local/NArk/web/keyfile_dir/64v4.mzh success
cpu
ram
disk
os
ip
load
sh HOST -g 64v6.mzhen.cn -p 22 -k /usr/local/NArk/web/keyfile_dir/64v6.mzh success
cpu
ram
disk
os
ip
load
sh HOST -g 64v5.mzhen.cn -p 22 -k /usr/local/NArk/web/keyfile_dir/64v5.mzh success
cpu
ram
disk
os
ip
load
hello world
1
hello world
1
